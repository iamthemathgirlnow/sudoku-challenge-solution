<output>
first_row: [0,0,0,3,9,4,6,5,0]
second_row: [0,6,0,0,0,0,0,0,3]
third_row: [0,0,8,1,5,0,0,0,0]
fourth_row: [0,3,9,0,0,7,0,0,0]
fifth_row: [4,5,7,0,0,2,0,6,0]
sixth_row: [8,0,0,9,0,0,0,1,4]
seventh_row: [0,0,0,0,0,0,0,8,0]
eighth_row: [9,0,0,0,6,1,0,0,0]
ninth_row: [0,1,5,2,8,0,0,4,6]
</output>


<Cells to update>
cell(third_row, sixth_column): [6]
cell(fourth_row, eighth_column): [2]
cell(seventh_row, eighth_column): [3]
</Cells to update>


# STEP_FOUR: Grouping Cells with Corresponding Rows
- Group each cell to be updated with the corresponding row. Do not update them yet.
- If there are no cells to be updated, print "There are no cells to update" and move to the next step.

- Example:
first_row: [0,3,0,0,8,0,4,9,0]
cell(first_row, fourth_column): [5]

fourth_row: [0,4,1,6,7,3,2,5,8]
cell(fourth_row, first_column): [9]

seventh_row: [2,0,4,0,0,0,0,8,0]
cell(seventh_row, eighth_column): [3]


# STEP_FIVE: Applying Cell Updates to Rows
- Now that the cells to update are cleanly grouped with the appropriate rows, confirm the column position and update each appropriate row.
- However, and this is VITAL: If the column position does NOT have a zero, IMMEDIATELY reject that square and move on to the next.

- Example:
first_row: [0,3,0,0,8,0,4,9,0]
cell(first_row, fourth_column): [5]
The 4th position of the first_row is 0, so we can proceed.
Updating the value in the 4th position of the first_row:
updated_first_row: [0,3,0,5,8,0,4,9,0]

fourth_row: [0,4,1,6,7,3,2,5,8]
cell(fourth_row, first_column): [9]
The 1st position of the fourth_row is 0, so we can proceed.
Updating the value in the 1st position of the fourth_row:
updated_fourth_row: [9,4,1,6,7,3,2,5,8]

seventh_row: [2,0,4,0,0,0,0,8,0]
cell(seventh_row, eighth_column): [3]
The 8th position of the seventh_row is 8, WHICH IS NOT 0. This square is rejected and will not be updated.


# STEP_SIX: Printing the Updated Sudoku
- Now print the Sudoku using the updated rows
- Specify the rows to update first to be sure they aren't forgotten. Do not include any rejected squares.

- Example:
The rows to update are first and fourth
updated_first_row: [0,3,0,5,8,0,4,9,0]
second_row: [0,9,2,0,4,1,0,0,0]
third_row: [0,6,0,7,0,9,0,0,5]
updated_fourth_row: [9,4,1,6,7,3,2,5,8]
fifth_row: [0,0,0,0,0,0,0,0,3]
sixth_row: [7,8,0,0,5,2,6,0,0]
seventh_row: [2,0,4,0,0,0,0,8,0]
eighth_row: [0,0,0,0,0,0,0,6,4]
ninth_row: [0,1,0,0,3,0,0,2,0]


# Standardizing Row Names in the Updated Sudoku
- Print the Sudoku you just updated, but with the the original NAMES for the rows.
- Make sure the elements are from the UPDATED Sudoku in STEP_SIX.
- As there is now an old and an updated Sudoku, both of which look similar, write the following above the updated Sudoku
"The rows to fix the NAMES of are {rows to change}. The elements are the same as in STEP_SIX."

- Example:
The rows to fix the NAMES of are first and fourth. The elements are the same as in STEP_SIX.

first_row: [0,3,0,5,8,0,4,9,0]
second_row: [0,9,2,0,4,1,0,0,0]
third_row: [0,6,0,7,0,9,0,0,5]
fourth_row: [9,4,1,6,7,3,2,5,8]
fifth_row: [0,0,0,0,0,0,0,0,3]
sixth_row: [7,8,0,0,5,2,6,0,0]
seventh_row: [2,0,4,0,0,0,0,8,0]
eighth_row: [0,0,0,0,0,0,0,6,4]
ninth_row: [0,1,0,0,3,0,0,2,0]

- Do not modify any other names in the Sudoku.


# STEP_SEVEN: Shifting the Rows of the Sudoku
- Before you output the Sudoku, the top three rows need to shifted to the bottom, like cutting a deck of cards.
- The rows to be in the order: fourth, fifth, sixth, seventh, eighth, ninth, first, second, third.

- Example:
fourth_row: [9,4,1,6,7,3,2,5,8]
fifth_row: [0,0,0,0,0,0,0,0,3]
sixth_row: [7,8,0,0,5,2,6,0,0]
seventh_row: [2,0,4,0,0,0,0,8,0]
eighth_row: [0,0,0,0,0,0,0,6,4]
ninth_row: [0,1,0,0,3,0,0,2,0]
first_row: [0,3,0,5,8,0,4,9,0]
second_row: [0,9,2,0,4,1,0,0,0]
third_row: [0,6,0,7,0,9,0,0,5]


# STEP_EIGHT Fixing the Row Names and Outputting the Sudoku
- WITHOUT moving the elements of the Sudoku, standardize the row names.
- Also surround the Sudoku in output tags to clearly mark it as the output.
- Do not write ANYTHING after the closing output tag, as it will interfere with the system extracting your output.

- Example:
<Output>
first_row: [9,4,1,6,7,3,2,5,8]
second_row: [0,0,0,0,0,0,0,0,3]
third_row: [7,8,0,0,5,2,6,0,0]
fourth_row: [2,0,4,0,0,0,0,8,0]
fifth_row: [0,0,0,0,0,0,0,6,4]
sixth_row: [0,1,0,0,3,0,0,2,0]
seventh_row: [0,3,0,5,8,0,4,9,0]
eighth_row: [0,9,2,0,4,1,0,0,0]
ninth_row: [0,6,0,7,0,9,0,0,5]
</Output>


# Final notes
- Ensure all outputs are clearly labeled using the simple headers provided in the instructions.
- Do not use code blocks. Just plain text with the headers in the instructions is fine.
- Stop ONLY after completing STEP_EIGHT, writing NOTHING ELSE after you write the final closing output tag.
- Begin