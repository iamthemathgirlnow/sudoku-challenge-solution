# STEP_ONE Extracting Previous Results
cell(second_row, first_column)
second_row_candidates = [1,4,5]
first_column_candidates = [2,3,5,6,7]
top_left_block_candidates = [1,2,3,4,5,7,9]

cell(third_row, eighth_column)
third_row_candidates = [2,3,4,7,9]
eighth_column_candidates = [3,7]
top_right_block_candidates = [1,2,4,7,8]

cell(seventh_row, second_column)
seventh_row_candidates = [1,2,3,4,5,6,9]
second_column_candidates = [4,7,8,9]
bottom_left_block_candidates = [2,3,4,6,7,8]

# STEP_TWO Calculating the candidates of each cell
## Cell 1 of 3
cell(second_row, first_column):

second_row_candidates = [1,4,5]
first_column_candidates = [2,3,5,6,7]
top_left_block_candidates = [1,2,3,4,5,7,9]

shortest_set = second_row_candidates = [1,4,5] = digits to search
second_row_candidates was the shortest set, so the lists to search are first_column_candidates and top_left_block_candidates

first_column_candidates.count(1) = 1, top_left_block_candidates.count(1) = 1, total_count(1) = 2 FOUND A TWO
first_column_candidates.count(4) = 0, top_left_block_candidates.count(4) = 1, total_count(4) = 1
first_column_candidates.count(5) = 1, top_left_block_candidates.count(5) = 1, total_count(5) = 2 FOUND A TWO

Confirmed candidates found for cell(second_row, first_column): [1,5]

## Cell 2 of 3
cell(third_row, eighth_column):

third_row_candidates = [2,3,4,7,9]
eighth_column_candidates = [3,7]
top_right_block_candidates = [1,2,4,7,8]

shortest_set = eighth_column_candidates = [3,7] = digits to search
eighth_column_candidates was the shortest set, so the lists to search are third_row_candidates and top_right_block_candidates

third_row_candidates.count(3) = 1, top_right_block_candidates.count(3) = 1, total_count(3) = 2 FOUND A TWO
third_row_candidates.count(7) = 1, top_right_block_candidates.count(7) = 1, total_count(7) = 2 FOUND A TWO

Confirmed candidates found for cell(third_row, eighth_column): [3,7]

## Cell 3 of 3
cell(seventh_row, second_column):

seventh_row_candidates = [1,2,3,4,5,6,9]
second_column_candidates = [4,7,8,9]
bottom_left_block_candidates = [2,3,4,6,7,8]

shortest_set = second_column_candidates = [4,7,8,9] = digits to search
second_column_candidates was the shortest set, so the lists to search are seventh_row_candidates and bottom_left_block_candidates

seventh_row_candidates.count(4) = 1, bottom_left_block_candidates.count(4) = 1, total_count(4) = 2 FOUND A TWO
seventh_row_candidates.count(7) = 1, bottom_left_block_candidates.count(7) = 1, total_count(7) = 2 FOUND A TWO
seventh_row_candidates.count(8) = 1, bottom_left_block_candidates.count(8) = 1, total_count(8) = 2 FOUND A TWO
seventh_row_candidates.count(9) = 1, bottom_left_block_candidates.count(9) = 0, total_count(9) = 1

Confirmed candidates found for cell(seventh_row, second_column): [4,7,8]

## Candidates of the cells
cell(second_row, first_column): [1,5]
cell(third_row, eighth_column): [3,7]
cell(seventh_row, second_column): [4,7,8]

# STEP_THREE Checking the number of elements in each cell
cell(second_row, first_column): [1,5]
[1,5].length = 2
length is 2, not 1, Rejected

cell(third_row, eighth_column): [3,7]
[3,7].length = 2
length is 2, not 1, Rejected

cell(seventh_row, second_column): [4,7,8]
[4,7,8].length = 3
length is 3, not 1, Rejected

## Passing Cells
There are no cells to update

# STEP_FOUR: Grouping Cells with Corresponding Rows
There are no cells to update

# STEP_FIVE: Applying Cell Updates to Rows
There are no cells to update

# STEP_SIX: Printing the Updated Sudoku
The rows to update are none
Using the contents of the original rows
first_row: [0,0,0,3,9,4,6,5,0]
second_row: [0,6,0,7,2,8,0,9,3]
third_row: [0,0,8,1,5,6,0,0,0]
fourth_row: [1,3,9,6,4,7,0,2,0]
fifth_row: [4,5,7,8,1,2,3,6,9]
sixth_row: [8,2,6,9,3,5,7,1,4]
seventh_row: [0,0,0,0,7,0,0,8,0]
eighth_row: [9,0,0,0,6,1,0,0,0]
ninth_row: [0,1,5,2,8,0,9,4,6]

# STEP_SEVEN: Shifting the Rows of the Sudoku
fourth_row: [1,3,9,6,4,7,0,2,0]
fifth_row: [4,5,7,8,1,2,3,6,9]
sixth_row: [8,2,6,9,3,5,7,1,4]
seventh_row: [0,0,0,0,7,0,0,8,0]
eighth_row: [9,0,0,0,6,1,0,0,0]
ninth_row: [0,1,5,2,8,0,9,4,6]
first_row: [0,0,0,3,9,4,6,5,0]
second_row: [0,6,0,7,2,8,0,9,3]
third_row: [0,0,8,1,5,6,0,0,0]

# STEP_EIGHT Fixing the Row Names and Outputting the Sudoku
<Output>
first_row: [1,3,9,6,4,7,0,2,0]
second_row: [4,5,7,8,1,2,3,6,9]
third_row: [8,2,6,9,3,5,7,1,4]
fourth_row: [0,0,0,0,7,0,0,8,0]
fifth_row: [9,0,0,0,6,1,0,0,0]
sixth_row: [0,1,5,2,8,0,9,4,6]
seventh_row: [0,0,0,3,9,4,6,5,0]
eighth_row: [0,6,0,7,2,8,0,9,3]
ninth_row: [0,0,8,1,5,6,0,0,0]
</Output>