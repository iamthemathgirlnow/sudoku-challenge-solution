# STEP_ONE Extracting Previous Results

cell(third_row, seventh_column)
third_row_candidates = [4]
seventh_column_candidates = [4,8]
top_right_block_candidates = [4]

cell(fourth_row, seventh_column)
fourth_row_candidates = [8]
seventh_column_candidates = [4,8]
middle_right_block_candidates = [8]

# STEP_TWO Calculating the candidates of each cell

## Cell 1 of 2
cell(third_row, seventh_column):

third_row_candidates.length = 1
seventh_column_candidates.length = 2
top_right_block_candidates.length = 1

shortest_list = third_row_candidates = digits to search

third_row_candidates = [4], broken into third_row_candidates_low = [4] and third_row_candidates_high = []
seventh_column_candidates = [4,8], broken into seventh_column_candidates_low = [4] and seventh_column_candidates_high = [8]
top_right_block_candidates = [4], broken into top_right_block_candidates_low = [4] and top_right_block_candidates_high = []

Checking third_row_candidates_low digits against: third_row_candidates_low and seventh_column_candidates_low
4: [4].count(4) = 1, [4].count(4) = 1, total_count(4) = 2 FOUND A CANDIDATE

Confirmed candidates found for cell(third_row, seventh_column): [4]

## Cell 2 of 2
cell(fourth_row, seventh_column):

fourth_row_candidates.length = 1
seventh_column_candidates.length = 2
middle_right_block_candidates.length = 1

shortest_list = fourth_row_candidates = digits to search

fourth_row_candidates = [8], broken into fourth_row_candidates_low = [] and fourth_row_candidates_high = [8]
seventh_column_candidates = [4,8], broken into seventh_column_candidates_low = [4] and seventh_column_candidates_high = [8]
middle_right_block_candidates = [8], broken into middle_right_block_candidates_low = [] and middle_right_block_candidates_high = [8]

Checking fourth_row_candidates_high digits against: fourth_row_candidates_high and seventh_column_candidates_high
8: [8].count(8) = 1, [8].count(8) = 1, total_count(8) = 2 FOUND A CANDIDATE

Confirmed candidates found for cell(fourth_row, seventh_column): [8]

# STEP_THREE Checking the number of elements in each cell

cell(third_row, seventh_column): [4]
[4].length = 1
length is 1, Passes

cell(fourth_row, seventh_column): [8]
[8].length = 1
length is 1, Passes

## Passing Cells
cell(third_row, seventh_column): [4]
cell(fourth_row, seventh_column): [8]

# STEP_FOUR: Grouping Cells with Corresponding Rows

third_row: [3,9,8,1,5,6,0,7,2]
cell(third_row, seventh_column): [4]

fourth_row: [1,3,9,6,4,7,0,2,5]
cell(fourth_row, seventh_column): [8]

# STEP_FIVE: Applying Cell Updates to Rows

## 1 of 2
third_row: [3,9,8,1,5,6,0,7,2]
cell(third_row, seventh_column): [4]
The seventh_column is index 6 of third_row
third_row[6] == 0, so we can proceed.
Updating index 6 to '4'
let third_row[6] = 4
now third_row is [3,9,8,1,5,6,4,7,2]

## 2 of 2
fourth_row: [1,3,9,6,4,7,0,2,5]
cell(fourth_row, seventh_column): [8]
The seventh_column is index 6 of fourth_row
fourth_row[6] == 0, so we can proceed.
Updating index 6 to '8'
let fourth_row[6] = 8
now fourth_row is [1,3,9,6,4,7,8,2,5]

# STEP_SIX: Printing the Updated Sudoku

The rows to update are third_row and fourth_row
Using the contents of updated_third_row and updated_fourth_row
first_row: [2,7,1,3,9,4,6,5,8]
second_row: [5,6,4,7,2,8,1,9,3]
third_row: [3,9,8,1,5,6,4,7,2]
fourth_row: [1,3,9,6,4,7,8,2,5]
fifth_row: [4,5,7,8,1,2,3,6,9]
sixth_row: [8,2,6,9,3,5,7,1,4]
seventh_row: [6,4,3,5,7,9,2,8,1]
eighth_row: [9,8,2,4,6,1,5,3,7]
ninth_row: [7,1,5,2,8,3,9,4,6]

# STEP_SEVEN: Shifting the Rows of the Sudoku

fourth_row: [1,3,9,6,4,7,8,2,5]
fifth_row: [4,5,7,8,1,2,3,6,9]
sixth_row: [8,2,6,9,3,5,7,1,4]
seventh_row: [6,4,3,5,7,9,2,8,1]
eighth_row: [9,8,2,4,6,1,5,3,7]
ninth_row: [7,1,5,2,8,3,9,4,6]
first_row: [2,7,1,3,9,4,6,5,8]
second_row: [5,6,4,7,2,8,1,9,3]
third_row: [3,9,8,1,5,6,4,7,2]

# STEP_EIGHT Fixing the Row Names and Outputting the Sudoku

<Output>
first_row: [1,3,9,6,4,7,8,2,5]
second_row: [4,5,7,8,1,2,3,6,9]
third_row: [8,2,6,9,3,5,7,1,4]
fourth_row: [6,4,3,5,7,9,2,8,1]
fifth_row: [9,8,2,4,6,1,5,3,7]
sixth_row: [7,1,5,2,8,3,9,4,6]
seventh_row: [2,7,1,3,9,4,6,5,8]
eighth_row: [5,6,4,7,2,8,1,9,3]
ninth_row: [3,9,8,1,5,6,4,7,2]
</Output>