 third_column_missing_elements, top_left_block_missing_elements
STEP_A: [6,8].intersection([6]) = [6]
STEP_B: [6].intersection([3,6]) = [6]
common_missing_elements: [6]
FOUND 3 OF MAX FOUR: cell(second_row, third_column)

#### 4 of {max_cells}
(second_row, ninth_column):
import second_row_missing_elements, ninth_column_missing_elements, top_right_block_missing_elements
STEP_A: [6,8].intersection([8]) = [8]
STEP_B: [8].intersection([8,9]) = [8]
common_missing_elements: [8]
FOUND 4 OF MAX FOUR: cell(second_row, ninth_column)

STOPPING SEARCH AT FOUR MAX CELLS. Stopping with current_cell_count of 4 of max_cells cells searched

Finished printing 4 out of 4 cells, found 4 out of a max of 4

# Outputting the found cells
## Collating Results
FOUND: cell(first_row, first_column)
FOUND: cell(first_row, eighth_column)
FOUND: cell(second_row, third_column)
FOUND: cell(second_row, ninth_column)

## Unbiased Results
<analysis output>
cell(first_row, first_column)
first_row_missing_elements = [3,9]
first_column_missing_elements = [3]
top_left_block_missing_elements = [3,6]

cell(first_row, eighth_column)
first_row_missing_elements = [3,9]
eighth_column_missing_elements = [9]
top_right_block_missing_elements = [8,9]

cell(second_row, third_column)
second_row_missing_elements = [6,8]
third_column_missing_elements = [6]
top_left_block_missing_elements = [3,6]

cell(second_row, ninth_column)
second_row_missing_elements = [6,8]
ninth_column_missing_elements = [8]
top_right_block_missing_elements = [8,9]
</analysis output>